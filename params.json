{"note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"CSS3 Keyframe Animation from JavaScript","google":"","body":"A3D.js  CSS3 Keyframe Animation from JavaScript\r\n======================\r\n\r\nCSS3キーフレームアニメーションをJavaScriptから動的に使用するためのプラグインです。また、CSS3アニメーションを強力に機能拡張することができます。\r\n\r\n\r\n機能\r\n-------\r\n\r\n* JavaScriptのプログラムから、CSS3のキーフレームアニメーションを動的に生成できます\r\n\r\n* キーフレームにおける任意のタイミングでJavaScriptのコードを発火することができます。\r\n\r\n* キーフレーム情報、エフェクト情報、アニメーション情報を分離して管理することで、複雑なアニメーション制御をシンプルに記述できます。\r\n\r\n* 複数のキーフレームアニメーションを連鎖させる事ができます\r\n\r\n* 絶対位置指定、相対位置指定をサポートします。（エレメントの現在地点から前へ１０PXといった指定が可能）\r\n\r\n\r\n使い方\r\n------\r\n\r\n### 基本的なアニメーション ###\r\nアニメーションの実行はa3dメソッドを使用します。\r\n\r\n\r\n### サンプルコード ###\r\n\r\n      //キーブレームアニメーションの定義\r\n      var a3d_define = {\r\n          frames:{\r\n              \"0%\":\r\n                  {\r\n                      trans:{\"rotate\":\"0deg\"}\r\n                   },\r\n              \"50%\":\r\n                   {\r\n                       trans:{\"rotateY\":\"180deg\",\"y\":\"-100px\",\"x\":\"-100px\"}\r\n                    },\r\n              \"100%\":\r\n                    {\r\n                      trans:{\"rotate\":\"360deg\",\"y\":\"-200px\",\"x\":\"-200px\",\"scale\":\"0.3\"}\r\n                     }\r\n          }             \r\n          ,\r\n          config:{\r\n              duration:\"4s\",\r\n              state:\"running\",\r\n              easing:\"ease\"\r\n          }\r\n     };\r\n\r\n    //アニメーションの実行\r\n    $(\".target_image\").a3d(a3d_define);    \r\n    \r\n   \r\nパラメータ詳細\r\n----------------\r\n◆アニメーションの情報を定義\r\n \r\n    {\r\n        frames:{…},\r\n        config:{…},\r\n        complete:function(){…},\r\n        start:function(){…},\r\n        iteration:function(){…},\r\n \r\n    }\r\n \r\n+   `frames` :\r\n    _frames_ はキーフレームの状態を定義します。durationで指定した時間に対してパーセンテージを指定してください。例えば５秒かかるアニメーションに対して20%の位置という指定になります。0〜100%の間で指定してください。指定数の上限はありません。また、0%を省略することで前回のアニメーション状態を継承して新しいアニメーションを開始できます。\r\n \r\n+   `config` :\r\n    _config_ はアニメーションの動作を定義することができます。アニメーションにかかる時間や、エフェクト、繰り返しなどです。詳細は後述のconfig詳細をご確認ください。\r\n\r\n+   `complete` :\r\n    _complete_ はこのキーフレームアニメーションが完了した時点で呼び出される関数を渡すことができます。\r\n \r\n+   `complete` :\r\n    _start_ はこのキーフレームアニメーションが開始した時点で呼び出される関数を渡すことができます。\r\n\r\n+   `iteration` :\r\n    _iteration_ はconfigでcountを１より大きい値を指定している場合、繰り返しのたびに呼び出される関数を指定できます。\r\n\r\n◆フレーム情報詳細\r\n\r\n    {\r\n    …\r\n    \"50%\":\r\n        frames:{\r\n            \"trans\":{…},\r\n            \"styles\":{…},\r\n            \"ext\":{finction(){…}}           \r\n        },\r\n    …\r\n    }\r\n \r\n+   `trans` :\r\n    _trans_ はトランスフォーム関数で指定できる要素を指定できます。\r\n\r\n・座標移動(translate, translate3d, translateX, translateY, translateZ)\r\n\r\n・拡大縮小(scale, scale3d, scaleX, scaleY, scaleZ)\r\n\r\n・回転(rotate, rotate3d, rotateX, rotateY, rotateZ)\r\n\r\n・スキュー(skew, skewX, skewY)\r\n\r\n・マトリクス処理(matrix, matrix3d)\r\n\r\n・透視投影(perspective)\r\n\r\nまた、座標移動に関して、次のような簡易的な記述を推奨します。\r\n\r\n    {x:\"400px\",y:\"300px\",z:\"100px\"}\r\n\r\nさらに、指定方法を絶対位置、相対位置、初期位置が選択できます。\r\n\r\n　数値の前に=(イコール)を記述することで、エレメントの現在位置を基準とした座標移動を指定できます。\r\n\r\n（例）エレメントの現在位置を基準としてX軸方向へ400px　Y軸方向へ-300px移動します\r\n\r\n    {x:\"=+400px\",y:\"=-300px\"}\r\n\r\n\r\n　数値の前に*(アスタリスク)を記述することで絶対位置指定になります。\r\n\r\n（例）画面左端から X軸方向へ400px　Y軸方向へ300pxの位置\r\n\r\n    {x:\"*400px\",y:\"*300px\"}\r\n\r\n\r\n数値だけの指定の場合は、エレメントの初期位置（DOM追加）が基準となります。←CSS3キーフレーム標準。使いにくい\r\n\r\n\r\n+   `styles` :\r\n    _styles_ はCSSの状態指定することができます。\r\n\r\n          styles:{\"opacity:0\",width:\"400px\",height:\"400px\"}\r\n\r\n+   `ext` :\r\n    _ext_はこのフレームが完了した際に呼び出される関数を指定することができます。さらに、thisでエレメントを参照することができます。\r\n\r\n\r\n◆コンフィグ情報詳細\r\n\r\n    {\r\n    …\r\n    \"config\":\r\n        {\r\n            duration:\"4s\",\r\n            state:\"running\",\r\n            easing:\"ease\",\r\n            count:\"1\",\r\n            delay:\"0\",\r\n            direction:\"\",\r\n            mode:\"forwards\",\r\n            maintain:\"true\"    \r\n        }\r\n    …\r\n    }\r\n \r\n+   `duration` :\r\n    アニメーション時間を指定できます。ここで指定した時間をかけて１００％まで状態が変化していきます。初期値”4s” \r\n\r\n    5s(５秒) 500ms(500ミリ秒)\r\n\r\n+   `state` :\r\nアニメーションの状態を指定します。初期値\"running\" 停止は\"pause\"でa3dState メソッドを使うことで任意のタイミングでアニメーションを開始できます\r\n+   `easing` :\r\n変化パターン指定。以下の値を適応できます。\r\n\r\n\r\n・ease(開始時点と終了時点を滑らかに再生する)\r\n\r\n・linear(一定の間隔で再生する)\r\n\r\n・ease-in(開始時点をゆっくり再生する)\r\n\r\n・ease-out(終了時点をゆっくり再生する)\r\n\r\n・ease-in-out(開始時点と終了時点をゆっくり再生する)\r\n\r\nこの他に、cubic-bezier関数を使って、イージングを独自に設定することも可能です。\r\n\r\n+   `count` :\r\n再生回数を指定できます。初期値は１。\"infinite\"を指定することで無限にアニメーションさせることもできます。\r\n\r\n+   `delay` :\r\n開始までの時間を指定できます。初期値は遅延なし(0)です。\r\n\r\n+   `direction` :\r\n偶数回のアニメーションを逆再生するか指定できます。\r\n初期値は\"normal\" 偶数回逆再生させる場合は、\"alternate\"を指定します。\r\n\r\n+   `mode` :\r\n再生前後の状態を指定できます。初期値は\"forwards\"で再生後の状態を維持します。\r\n\"none\"を指定すると、再生後の状態を維持しません\r\n\r\n+   `maintain` :\r\nアニメーションの状態を継承するかをしていできます。\r\n\r\nアニメーション連鎖\r\n----------------\r\n\r\n複数のアニメーション情報を連鎖的に登録することができます。\r\n\r\nこの機能を使うと、複数のアニメーション情報を組み合わせて、一連の動作を定義することができ、非常にシンプルかつ強力に動作します。\r\nすべてのアニメーションが完了した時に呼び出される関数を登録できます。\r\n\r\n    $(\"target\").a3dChain([a3d,a3d,…] , function(){…});\r\n\r\n\r\n\r\nデモ\r\n--------\r\nデモのコードを見ていただくのが手っ取り早いかも、、、\r\n\r\n<iframe src=\"http://test.html5go.info/labs/a3d/demo/\" style=\"width:640px;height:480px\">\r\n\r\n</iframe>\r\n\r\n \r\nライセンス\r\n----------\r\n* Copyright 2012, ShikemokuMK  \r\n \r\n *Free to use and abuse under the MIT license.\r\n *https://twitter.com/shikemokumk\r\n ","name":"Jquery.a3d.js"}